<style>
  .container {
    max-width: 1400px;
  }
  .timer-box {
    background: white;
    border-radius: 15px;
    padding: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    margin-bottom: 10px;
  }
  .timer {
    font-size: 3rem;
    font-weight: bold;
    color: #667eea;
    text-align: center;
  }
  .timer.warning {
    animation: blink 0.5s infinite;
  }
  @keyframes blink {
    0%,
    50% {
      color: #dc3545;
    }
    51%,
    100% {
      color: #667eea;
    }
  }
  .score-info {
    text-align: center;
    margin-top: 15px;
    font-size: 1.2rem;
    color: #495057;
  }
  .question-grid {
    background: white;
    border-radius: 15px;
    padding: 8px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    margin-bottom: 20px;
  }
  .question-btn {
    width: 24px;
    height: 42px;
    margin: 3px;
    /* border: 2px solid #dee2e6; */
    padding: 0;
    border: none;
    border-radius: 8px;
    background: rgb(229 231 235);
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s;
  }
  .question-btn:hover {
    transform: scale(1.1);
    background-color: #667eea;
    color: #ffffff;
  }
  .question-btn.active {
    background: rgb(147 51 234);
    color: white;
    border-color: rgb(168 85 247);
  }
  .question-btn.answered {
    background: #81c7e1;
    /* border-color: #3bf0ab; */
    color: #ffffff;
  }
  .question-btn.correct {
    background: #28a745;
    color: white;
    border-color: #28a745;
  }
  .question-btn.incorrect {
    background: #dc3545;
    color: white;
    border-color: #dc3545;
  }
  .question-box {
    background: white;
    border-radius: 15px;
    padding: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }
  .question-title {
    font-size: 1.5rem;
    font-weight: bold;
    color: #667eea;
    margin-bottom: 30px;
  }
  .answer-option {
    border: 2px solid #dee2e6;
    border-radius: 10px;
    padding: 15px 20px;
    margin-bottom: 8px;
    cursor: pointer;
    transition: all 0.3s;
    background: white;
  }
  .answer-option:hover {
    border-color: #667eea;
    background: #f8f9fa;
  }
  .answer-option.selected {
    background: #e3e8ff;
    border-color: #667eea;
    border-width: 3px;
  }
  .answer-option.correct-answer {
    background: #d4edda;
    border-color: #28a745;
    border-width: 3px;
  }
  .answer-option.wrong-answer {
    background: #f8d7da;
    border-color: #dc3545;
    border-width: 3px;
  }

  .btn-control {
    padding: 6px 30px;
    font-size: 1.1rem;
    border-radius: 10px;
    font-weight: bold;
  }
  .btn-start {
    background: #667eea;
    color: white;
    border: none;
  }
  .btn-submit {
    background: #28a745;
    color: white;
    border: none;
  }
  .btn-submit:hover {
    background-color: #7f28a7;
    border: #5370f0;
    scale: calc(1.1);
  }
  h1 {
    /* color: white; */
    text-align: center;
    /* margin-bottom: 30px; */
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  }
  #correctCount {
    font-weight: bold;
    color: #28a745;
  }
  #totalScore {
    font-weight: bold;
    color: #007bff;
  }
</style>

<div class="container">
  <h1>Bài thi Trắc Nghiệm Chung</h1>

  <div class="row">
    <div class="col-md-4">
      <div class="timer-box">
        <div class="timer" id="timer">30:00</div>
        <div class="score-info" id="scoreInfo" style="display: none">
          <div class="fw-bold">
            Số câu đúng: <span id="correctCount">0</span>/50
          </div>
          <div class="fw-bold">
            Tổng điểm: <span id="totalScore">0.0</span>/10
          </div>
        </div>
        <!-- <button class="btn btn-control btn-start w-100 mt-3" id="startBtn">
          Bắt đầu
        </button> -->
        <button
          class="btn btn-control btn-submit w-100 mt-3"
          id="submitBtn"
          style="display: none"
        >
          Nộp bài
        </button>
      </div>

      <div class="question-grid">
        <div
          id="questionGrid"
          class="d-flex flex-wrap justify-content-center"
        ></div>
      </div>
    </div>

    <div class="col-md-8">
      <div class="question-box">
        <div class="question-title" id="questionTitle">
          Câu 1: Đây là câu hỏi ví dụ số 1. Thủ đô của Việt Nam là gì?
        </div>

        <div id="answersContainer">
          <div class="answer-option" data-answer="A">
            <strong>A.</strong> Hà Nội
          </div>
          <div class="answer-option" data-answer="B">
            <strong>B.</strong> Đà Nẵng
          </div>
          <div class="answer-option" data-answer="C">
            <strong>C.</strong> TP. Hồ Chí Minh
          </div>
          <div class="answer-option" data-answer="D">
            <strong>D.</strong> Hải Phòng
          </div>
        </div>

        <div class="d-flex justify-content-between mt-4">
          <button class="btn btn-control btn-secondary" id="prevBtn" disabled>
            Quay lại
          </button>
          <div class="text-center">
            <a href="/general-knowledge" class="btn btn-success"
              >Về trang phần thi chung</a
            >
          </div>
          <button
            class="btn btn-control btn-primary"
            id="nextBtn"
            style="background: #667eea; color: white"
          >
            Tiếp
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> -->
<script>
  // Dữ liệu câu hỏi mẫu (50 câu)
  // const questions = [
  //   {
  //     q: "Đây là câu hỏi ví dụ số 1. Thủ đô của Việt Nam là gì?",
  //     answers: ["Hà Nội", "Đà Nẵng", "TP. Hồ Chí Minh", "Hải Phòng"],
  //     correct: "A",
  //   },
  //   {
  //     q: "Đây là câu hỏi ví dụ số 2. Thủ đô của Việt Nam là gì?",
  //     answers: ["Hà Nội", "Đà Nẵng", "TP. Hồ Chí Minh", "Hải Phòng"],
  //     correct: "A",
  //   },
  //   {
  //     q: "Sông dài nhất Việt Nam là?",
  //     answers: ["Sông Hồng", "Sông Mekong", "Sông Đồng Nai", "Sông Cửu Long"],
  //     correct: "B",
  //   },
  //   {
  //     q: "Việt Nam có bao nhiêu tỉnh thành?",
  //     answers: ["61", "62", "63", "64"],
  //     correct: "C",
  //   },
  //   {
  //     q: "Quốc hoa của Việt Nam là?",
  //     answers: ["Hoa sen", "Hoa đào", "Hoa mai", "Hoa cúc"],
  //     correct: "A",
  //   },
  //   {
  //     q: "Việt Nam nằm ở khu vực nào?",
  //     answers: ["Đông Nam Á", "Đông Á", "Nam Á", "Tây Á"],
  //     correct: "A",
  //   },
  //   {
  //     q: "Diện tích Việt Nam là?",
  //     answers: ["331.212 km²", "329.241 km²", "330.967 km²", "332.698 km²"],
  //     correct: "C",
  //   },
  //   {
  //     q: "Việt Nam có bờ biển dài?",
  //     answers: ["3.200 km", "3.260 km", "3.444 km", "3.500 km"],
  //     correct: "C",
  //   },
  //   {
  //     q: "Núi cao nhất Việt Nam là?",
  //     answers: ["Phan Xi Păng", "Ngọc Linh", "Bạch Mã", "Tây Côn Lĩnh"],
  //     correct: "A",
  //   },
  //   {
  //     q: "Việt Nam giành độc lập năm nào?",
  //     answers: ["1945", "1954", "1975", "1976"],
  //     correct: "A",
  //   },
  // ];

  // Tạo đủ 50 câu (lặp lại các câu có sẵn)
  // while (questions.length < 50) {
  //   questions.push({
  //     ...questions[questions.length % 10],
  //     q:
  //       `Câu ${questions.length + 1}: ` +
  //       questions[questions.length % 10].q.substring(
  //         questions[questions.length % 10].q.indexOf(":") + 2
  //       ),
  //   });
  // }

  let questions = JSON.parse('<%- JSON.stringify(generalTest).replace(/\\/g, "\\\\").replace(/'/g, "\\'") %>');
  questions = shuffle(questions);
  console.log(questions);


  let currentQuestion = 0;
  let userAnswers = new Array(50).fill(null);
  let timerInterval = null;
  let timeLeft = 1800; // 30 phút
  let isTestStarted = false;
  let isSubmitted = false;

  // Khởi tạo lưới câu hỏi
  function initQuestionGrid() {
    const grid = document.getElementById("questionGrid");
    grid.innerHTML = "";
    for (let i = 1; i <= 50; i++) {
      const btn = document.createElement("button");
      btn.className = "question-btn";
      btn.textContent = i;
      btn.onclick = () => goToQuestion(i - 1);
      grid.appendChild(btn);
    }
    updateQuestionGrid();
  }

  // Cập nhật lưới câu hỏi
  function updateQuestionGrid() {
    const buttons = document.querySelectorAll(".question-btn");
    buttons.forEach((btn, index) => {
      btn.classList.remove("active", "answered", "correct", "incorrect");

      if (isSubmitted) {
        if (userAnswers[index] === questions[index].correct) {
          btn.classList.add("correct");
        } else if (userAnswers[index] !== null) {
          btn.classList.add("incorrect");
        }
      } else {
        if (index === currentQuestion) {
          btn.classList.add("active");
        } else if (userAnswers[index] !== null) {
          btn.classList.add("answered");
        }
      }
    });
  }

  // Hiển thị câu hỏi
  function displayQuestion() {
    const q = questions[currentQuestion];
    document.getElementById("questionTitle").textContent = `Câu ${
      currentQuestion + 1
    }: ${q.q}`;

    const container = document.getElementById("answersContainer");
    container.innerHTML = "";

    const letters = ["A", "B", "C", "D"];
    q.answers.forEach((answer, index) => {
      const div = document.createElement("div");
      div.className = "answer-option";
      div.setAttribute("data-answer", letters[index]);
      div.innerHTML = `<strong>${letters[index]}.</strong> ${answer}`;

      if (!isSubmitted) {
        div.onclick = () => selectAnswer(letters[index]);
      }

      if (userAnswers[currentQuestion] === letters[index]) {
        div.classList.add("selected");
      }

      if (isSubmitted) {
        if (letters[index] === q.correct) {
          div.classList.add("correct-answer");
        } else if (userAnswers[currentQuestion] === letters[index]) {
          div.classList.add("wrong-answer");
        }
      }

      container.appendChild(div);
    });

    // Cập nhật nút điều hướng
    document.getElementById("prevBtn").disabled = currentQuestion === 0;
    document.getElementById("nextBtn").disabled = currentQuestion === 49;

    updateQuestionGrid();
  }

  // Chọn đáp án
  function selectAnswer(answer) {
    if (isSubmitted) return;

    userAnswers[currentQuestion] = answer;
    displayQuestion();

    // Kiểm tra nếu đã làm đủ 50 câu
    const answeredCount = userAnswers.filter((a) => a !== null).length;
    if (answeredCount === 50) {
      document.getElementById("submitBtn").style.display = "block";
    }
  }

  // Chuyển câu hỏi
  function goToQuestion(index) {
    currentQuestion = index;
    displayQuestion();
  }
  // Xao trộn câu hỏi
  function shuffle(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]]; // hoán đổi vị trí
    }
    return array;
  }
  // Timer
  function startTimer() {
    timerInterval = setInterval(() => {
      timeLeft--;

      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;
      const timerEl = document.getElementById("timer");
      timerEl.textContent = `${minutes}:${seconds.toString().padStart(2, "0")}`;

      if (timeLeft <= 10) {
        timerEl.classList.add("warning");
      } else {
        timerEl.classList.remove("warning");
      }

      if (timeLeft <= 0) {
        clearInterval(timerInterval);
        timerEl.textContent = "HẾT GIỜ";
        submitTest();
      }
    }, 1000);
  }

  // Bắt đầu bài thi
  //   document.getElementById("startBtn").onclick = function () {
  //     if (!isTestStarted) {
  //       isTestStarted = true;
  //       this.textContent = "Đang làm bài...";
  //       this.disabled = true;
  //       startTimer();
  //     }
  //   };

  // Nộp bài
  document.getElementById("submitBtn").onclick = function () {
    if (confirm("Bạn có chắc muốn nộp bài?")) {
      submitTest();
    }
  };

  function submitTest() {
    isSubmitted = true;
    clearInterval(timerInterval);

    // Tính điểm
    let correctCount = 0;
    userAnswers.forEach((answer, index) => {
      if (answer === questions[index].correct) {
        correctCount++;
      }
    });

    const totalScore = (correctCount * 0.2).toFixed(1);

    document.getElementById("correctCount").textContent = correctCount;
    document.getElementById("totalScore").textContent = totalScore;
    document.getElementById("scoreInfo").style.display = "block";
    document.getElementById("submitBtn").style.display = "none";

    // Thêm nút làm lại
    const restartBtn = document.createElement("button");
    restartBtn.className = "btn btn-control btn-primary w-100 mt-3";
    restartBtn.textContent = "Làm lại";
    restartBtn.onclick = resetTest;
    document.querySelector(".timer-box").appendChild(restartBtn);

    displayQuestion();
  }

  // Thêm hàm reset test
  function resetTest() {
    // Reset các biến trạng thái
    currentQuestion = 0;
    userAnswers = new Array(50).fill(null);
    timeLeft = 1800;
    isSubmitted = false;

    // Reset UI
    document.getElementById("timer").textContent = "30:00";
    document.getElementById("timer").classList.remove("warning");
    document.getElementById("scoreInfo").style.display = "none";

    // Xóa nút làm lại
    const restartBtn = document.querySelector(".timer-box button:last-child");
    if (restartBtn) restartBtn.remove();

    // Reset grid và hiển thị câu hỏi
    initQuestionGrid();
    displayQuestion();

    // Bắt đầu timer mới
    startTimer();
  }

  // Nút điều hướng
  document.getElementById("prevBtn").onclick = () => {
    if (currentQuestion > 0) {
      currentQuestion--;
      displayQuestion();
    }
  };

  document.getElementById("nextBtn").onclick = () => {
    if (currentQuestion < 49) {
      currentQuestion++;
      displayQuestion();
    }
  };

  // Khởi tạo
  initQuestionGrid();
  displayQuestion();
  startTimer();
</script>
