<style>
  .quiz-shell {
    max-width: 980px;
    margin: 24px auto;
  }
  .header-bar {
    background: #e9eef9;
    border-radius: 12px 12px 0 0;
    padding: 8px 16px;
    text-align: center;
    font-weight: 700;
    color: #2f4fa1;
  }
  .question-box {
    background: #fff;
    border-radius: 0 0 12px 12px;
    padding: 20px;
    border: 1px solid #dcdcdc;
    min-height: 120px;
    font-size: 1.15rem;
    display: flex;
    align-items: center;
  }

  /* Khối đáp án kiểu thẻ màu như ảnh */
  .answers-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 14px;
  }
  .answer-card {
    display: flex;
    align-items: center;
    border-radius: 10px;
    background: #ffffff;
    border: 2px solid transparent;
    cursor: pointer;
    overflow: hidden;
    min-height: 72px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06);
    transition: transform 0.05s ease, box-shadow 0.2s ease,
      border-color 0.2s ease;
    user-select: none;
  }
  .answer-card:hover {
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
    transform: translateY(-1px);
  }
  .answer-label {
    width: 56px;
    min-width: 56px;
    color: #fff;
    font-weight: 800;
    font-size: 1.3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
  }
  .answer-text {
    padding: 10px 14px;
    font-weight: 600;
    color: #333;
    flex: 1;
  }
  .answer-A .answer-label {
    background: #2d7ef7;
  } /* blue */
  .answer-B .answer-label {
    background: #f0ad4e;
  } /* orange */
  .answer-C .answer-label {
    background: #5cb85c;
  } /* green */
  .answer-D .answer-label {
    background: #d9534f;
  } /* red   */

  /* Trạng thái sau khi chọn/chấm */
  .selected {
    border-color: #6c63ff;
  }
  .correct {
    border-color: #28a745 !important;
    box-shadow: 0 0 0 4px rgba(40, 167, 69, 0.15);
    background-color: #28a745 !important;
  }
  .wrong {
    border-color: #dc3545 !important;
    box-shadow: 0 0 0 4px rgba(220, 53, 69, 0.12);
    background-color: #dc3545 !important;
  }

  .control-panel {
    display: flex;
    gap: 10px;
    align-items: center;
    justify-content: space-between;
    margin-top: 18px;
  }
  .timer {
    font-size: 2rem;
    font-weight: 800;
    color: #333;
    letter-spacing: 0.5px;
    min-width: 120px;
    text-align: center;
  }
  .blink {
    animation: blink 1s infinite;
    color: #d9534f;
  }
  @keyframes blink {
    50% {
      opacity: 0;
    }
  }

  /* timer container */
  .timer-box {
    background: #ffffff;
    padding: 0.6rem 0.85rem;
    border: 1px solid #e9e9e9;
    border-radius: 8px;
    min-width: 140px;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.03);
  }
  .timer-box .timer {
    margin: 0;
  }
  .timer-box .result-banner {
    margin-top: 6px;
    color: #6c757d;
    font-weight: 700;
    font-size: 0.95rem;
    text-align: center;
  }

  .result-banner {
    margin-top: 12px;
    font-weight: 700;
  }

  .hidden {
    display: none !important;
  }
  .muted {
    opacity: 0.6;
    pointer-events: none;
  }

  .footer-note {
    color: #666;
    font-size: 0.95rem;
    margin-top: 6px;
  }
</style>
<h2 class="mt-3 text-center">Câu hỏi trắc nghiệm bắt buộc</h2>
<div class="quiz-shell">
  <!-- input chọn số câu -->
  <div class="mb-3">
    <label for="qInput" class="form-label"
      >Nhập số thứ tự câu hỏi (1 - <span id="totalCount">9</span>)</label
    >
    <input
      id="qInput"
      type="number"
      min="1"
      class="form-control"
      placeholder="Nhập số và Enter để load câu"
    />
  </div>

  <div class="row g-3">
    <!-- bên trái: câu hỏi + đáp án -->
    <div class="col-md-8">
      <div class="question-box" id="questionBox">
        Nhập số câu và nhấn Enter để load câu hỏi.
      </div>

      <div class="answers-grid mt-3" id="answersGrid">
        <!-- render đáp án tại đây -->
      </div>

      <div class="mt-3">
        <button id="btnConfirm" class="btn btn-primary" disabled>
          Xác nhận trả lời
        </button>
        <div id="resultBanner" class="result-banner mt-2"></div>
      </div>
    </div>

    <!-- bên phải: timer -->
    <div class="col-md-4">
      <div class="timer-box p-3">
        <div id="timer" class="timer">15</div>
        <div id="userTime" class="result-banner text-secondary mt-2">
          Thời gian trả lời: -
        </div>
      </div>
    </div>
  </div>

  <div class="footer-note mt-3">
    Thời gian tối đa 15 giây. Khi còn 5 giây đèn sẽ nhấp nháy đỏ. Hết giờ sẽ
    hiển thị "Hết giờ".
  </div>
</div>

<script>
  const TOTAL_PICK = 90; // giữ nguyên bộ câu hỏi đang load (QUESTION_DB)
  const TIME_LIMIT = 15.0;

  let QUESTION_DB = JSON.parse('<%- JSON.stringify(multipleData).replace(/\\/g, "\\\\").replace(/'/g, "\\'") %>');

  // Các phần tử UI
  const qInput = document.getElementById('qInput');
  const totalCountEl = document.getElementById('totalCount');
  const questionBox = document.getElementById('questionBox');
  const answersGrid = document.getElementById('answersGrid');
  const timerEl = document.getElementById('timer');
  const userTimeEl = document.getElementById('userTime');
  const btnConfirm = document.getElementById('btnConfirm');
  const resultBanner = document.getElementById('resultBanner');

  // trạng thái
  let currentIndex = null; // index trong QUESTION_DB (0-based)
  let timerId = null;
  let startTs = 0;
  let running = false;
  let userChoice = null; // 0..3
  let answeredShown = false;

  // đảm bảo QUESTION_DB được load (biến sẵn trong file)
  // hiển thị số câu tối đa
  totalCountEl.textContent = QUESTION_DB.length || TOTAL_PICK;

  function getCorrectIndex(q) {
    // Hỗ trợ nhiều dạng dữ liệu: q.a (0-based) hoặc q.correct ("A"/"B"/"C"/"D")
    if (typeof q.a !== 'undefined') return Number(q.a);
    if (typeof q.correct === 'string') {
      const map = { 'A':0,'B':1,'C':2,'D':3 };
      const up = q.correct.trim().toUpperCase();
      return map[up] ?? 0;
    }
    return 0;
  }

  function lockAnswers() {
    document.querySelectorAll('.answer-card').forEach(c => {
      c.classList.add('muted');
      c.style.pointerEvents = 'none';
    });
  }
  function unlockAnswers() {
    document.querySelectorAll('.answer-card').forEach(c => {
      c.classList.remove('muted');
      c.style.pointerEvents = 'auto';
    });
  }

  function startTimer() {
    clearInterval(timerId);
    running = true;
    timerEl.classList.remove('blink');
    timerEl.classList.remove('text-danger');
    timerEl.textContent = Math.round(TIME_LIMIT);
    startTs = performance.now();
    unlockAnswers();
    btnConfirm.disabled = false;
    answeredShown = false;
    userTimeEl.textContent = 'Thời gian trả lời: -';

    timerId = setInterval(() => {
      const elapsed = (performance.now() - startTs) / 1000;
      const remain = Math.max(0, TIME_LIMIT - elapsed);
      timerEl.textContent = Math.ceil(remain);
      if (remain <= 5 && remain > 0) {
        timerEl.classList.add('blink');
        timerEl.classList.add('text-danger');
      } else {
        timerEl.classList.remove('blink');
        timerEl.classList.remove('text-danger');
      }
      if (remain <= 0) {
        clearInterval(timerId);
        running = false;
        timerEl.textContent = 'Hết giờ';
        lockAnswers();
        btnConfirm.disabled = false; // cho phép bấm xác nhận sau khi hết giờ
      }
    }, 100);
  }

  function renderQuestionByIndex(i) {
    const q = QUESTION_DB[i];
    if (!q) return;
    currentIndex = i;
    userChoice = null;
    resultBanner.textContent = '';
    // Hiển thị câu hỏi
    questionBox.textContent = q.q ?? q.question ?? '(Không có nội dung)';
    // tạo đáp án
    const labels = ['A','B','C','D'];
    answersGrid.innerHTML = '';
    (q.o || q.o || []).forEach((opt, idx) => {
      const card = document.createElement('div');
      card.className = `answer-card answer-${labels[idx]}`;
      card.dataset.index = idx;
      card.style.display = 'flex';
      card.style.marginBottom = '8px';
      card.style.padding = '10px';
      card.style.borderRadius = '8px';

      const lab = document.createElement('div');
      lab.className = 'answer-label';
      lab.textContent = labels[idx];
      lab.style.minWidth = '56px';
      lab.style.background = ''; // màu đã có css via classes

      const txt = document.createElement('div');
      txt.className = 'answer-text';
      txt.textContent = opt;

      card.appendChild(lab);
      card.appendChild(txt);

      card.addEventListener('click', () => {
        if (!running && timerEl.textContent !== 'Hết giờ') return; // chưa bắt đầu
        if (answeredShown) return;
        // tô lựa chọn (chưa chấm)
        document.querySelectorAll('.answer-card').forEach(c => c.classList.remove('selected'));
        card.classList.add('selected');
        userChoice = idx;
      });

      answersGrid.appendChild(card);
    });

    // bắt đầu timer
    startTimer();
  }

  // xử lý Enter trên input
  function handleQInputSubmit(valRaw) {
    const valNum = Number(String(valRaw).trim());
    if (!Number.isInteger(valNum) || valNum < 1 || valNum > QUESTION_DB.length) {
      alert('Số câu không hợp lệ');
      return;
    }
    // load câu tương ứng (1-based -> 0-based)
    renderQuestionByIndex(valNum - 1);
  }

  // bắt cả keydown và keyup để chắc chắn bắt Enter trên mọi trình duyệt
  qInput.addEventListener('keydown', (ev) => {
    if (ev.key === 'Enter' || ev.keyCode === 13) {
      ev.preventDefault();
      handleQInputSubmit(qInput.value);
    }
  });
  qInput.addEventListener('keyup', (ev) => {
    if (ev.key === 'Enter' || ev.keyCode === 13) {
      ev.preventDefault();
      handleQInputSubmit(qInput.value);
    }
  });

  // optional: xử lý khi thay đổi ô input (nhấn tab hoặc blur)
  qInput.addEventListener('change', () => {
    // nếu muốn tự động load khi thay đổi, bỏ comment dòng dưới
    // handleQInputSubmit(qInput.value);
  });

  btnConfirm.addEventListener('click', () => {
    if (currentIndex === null) return;
    if (answeredShown) return;
    // dừng timer và tính thời gian trả lời
    clearInterval(timerId);
    running = false;
    let timeTaken = TIME_LIMIT;
    if (timerEl.textContent === 'Hết giờ') {
      timeTaken = TIME_LIMIT;
    } else {
      timeTaken = Math.min(TIME_LIMIT, (performance.now() - startTs) / 1000);
    }
    userTimeEl.textContent = `Thời gian trả lời: ${timeTaken.toFixed(2)}s`;

    const q = QUESTION_DB[currentIndex];
    const correctIndex = getCorrectIndex(q);

    // Hiển thị đáp án đúng/sai
    document.querySelectorAll('.answer-card').forEach(el => {
      const i = Number(el.dataset.index);
      if (i === correctIndex) el.classList.add('correct');
      if (userChoice !== null && i === userChoice && i !== correctIndex) el.classList.add('wrong');
      // vô hiệu hóa tương tác
      el.style.pointerEvents = 'none';
    });

    // banner
    if (userChoice === null) {
      resultBanner.textContent = '⏰ Hết giờ hoặc chưa chọn. Trả lời sai.';
    } else if (userChoice === correctIndex) {
      resultBanner.textContent = `✅ Chính xác! Thời gian: ${timeTaken.toFixed(2)}s`;
    } else {
      resultBanner.textContent = `❌ Sai! Thời gian: ${timeTaken.toFixed(2)}s`;
    }

    btnConfirm.disabled = true;
    answeredShown = true;
  });

  // helper: nếu QUESTION_DB chưa có, disable input
  if (!Array.isArray(QUESTION_DB) || QUESTION_DB.length === 0) {
    qInput.disabled = true;
    qInput.placeholder = 'Không có dữ liệu câu hỏi';
  } else {
    totalCountEl.textContent = QUESTION_DB.length;
  }
</script>
